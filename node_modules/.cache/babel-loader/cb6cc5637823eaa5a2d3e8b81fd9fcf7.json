{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/pages/ComidasEmProgresso.jsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport FavoriteButton from '../components/FavoriteButton';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport { getIngredient } from '../services/Functions';\nexport default function ComidasEmProgresso() {\n  const {\n    idDishes,\n    setFoodId,\n    setInProgress\n  } = useContext(RecipesAppContext);\n  const {\n    dishId\n  } = useParams();\n  setFoodId(dishId);\n  const [dish] = idDishes;\n  const history = useHistory();\n  const [checks, setCheck] = useState(0);\n  const [ingredientsUsed, setIngredientsUsed] = useState([]);\n  useEffect(() => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgress && inProgress.meals[dishId]) {\n      setInProgress(inProgress);\n      setIngredientsUsed(inProgress.meals[dishId]);\n    }\n  }, [dishId, setInProgress]);\n  useEffect(() => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgress) {\n      inProgress.meals[dishId] = ingredientsUsed;\n      setInProgress(inProgress);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n    }\n\n    setCheck(ingredientsUsed.length);\n  }, [ingredientsUsed, dishId, setInProgress]);\n\n  const finishRecipe = () => {\n    let doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n\n    if (doneRecipes) {\n      doneRecipes.push({\n        id: dishId,\n        type: 'comida',\n        area: dish.strArea,\n        category: dish.strCategory,\n        alcoholicOrNot: '',\n        name: dish.strMeal,\n        image: dish.strMealThumb,\n        tags: dish.strTags.split(',')\n      });\n    } else {\n      doneRecipes = [{\n        id: dishId,\n        type: 'comida',\n        area: dish.strArea,\n        category: dish.strCategory,\n        alcoholicOrNot: '',\n        name: dish.strMeal,\n        image: dish.strMealThumb,\n        tags: dish.strTags.split(',')\n      }];\n    }\n\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n    history.push('/receitas-feitas');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recipe-detail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, dish && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: `${dish.strMealThumb}`,\n    alt: \"\",\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"shot-instruction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, dish.strMeal), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, dish.strCategory), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, dish.strInstructions)), getIngredient(dish).map(ingredient => /*#__PURE__*/React.createElement(\"div\", {\n    id: true,\n    key: ingredient.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    \"data-testid\": `${ingredient.index - 1}-ingredient-step`,\n    htmlFor: ingredient.nome,\n    className: ingredientsUsed.includes(ingredient.index) ? 'stepDone' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: ingredient.nome,\n    checked: ingredientsUsed.includes(ingredient.index),\n    onChange: async ({\n      target\n    }) => {\n      const text = target.parentElement;\n      text.classList.toggle('stepDone');\n\n      if (target.checked) {\n        setIngredientsUsed([...ingredientsUsed, ingredient.index]);\n      } else {\n        const index = ingredientsUsed.indexOf(ingredient.index);\n        ingredientsUsed.splice(index, 1);\n        setIngredientsUsed([...ingredientsUsed]);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), `${ingredient.nome} - ${ingredient.quantidade}`))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    value: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FavoriteButton, {\n    recipe: dish,\n    type: \"comida\",\n    id: dishId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    disabled: checks !== getIngredient(dish).length,\n    onClick: finishRecipe,\n    value: \"Finalizar-Receita\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/pages/ComidasEmProgresso.jsx"],"names":["React","useContext","useState","useEffect","useParams","useHistory","FavoriteButton","RecipesAppContext","getIngredient","ComidasEmProgresso","idDishes","setFoodId","setInProgress","dishId","dish","history","checks","setCheck","ingredientsUsed","setIngredientsUsed","inProgress","JSON","parse","localStorage","getItem","meals","setItem","stringify","length","finishRecipe","doneRecipes","push","id","type","area","strArea","category","strCategory","alcoholicOrNot","name","strMeal","image","strMealThumb","tags","strTags","split","strInstructions","map","ingredient","index","nome","includes","target","text","parentElement","classList","toggle","checked","indexOf","splice","quantidade"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport FavoriteButton from '../components/FavoriteButton';\r\nimport RecipesAppContext from '../context/RecipesAppContext';\r\nimport { getIngredient } from '../services/Functions';\r\n\r\nexport default function ComidasEmProgresso() {\r\n  const {\r\n    idDishes,\r\n    setFoodId,\r\n    setInProgress,\r\n  } = useContext(RecipesAppContext);\r\n  const { dishId } = useParams();\r\n  setFoodId(dishId);\r\n  const [dish] = idDishes;\r\n\r\n  const history = useHistory();\r\n  const [checks, setCheck] = useState(0);\r\n  const [ingredientsUsed, setIngredientsUsed] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\r\n    if (inProgress && inProgress.meals[dishId]) {\r\n      setInProgress(inProgress);\r\n      setIngredientsUsed(inProgress.meals[dishId]);\r\n    }\r\n  }, [dishId, setInProgress]);\r\n\r\n  useEffect(() => {\r\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\r\n    if (inProgress) {\r\n      inProgress.meals[dishId] = ingredientsUsed;\r\n      setInProgress(inProgress);\r\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\r\n    }\r\n    setCheck(ingredientsUsed.length);\r\n  }, [ingredientsUsed, dishId, setInProgress]);\r\n\r\n  const finishRecipe = () => {\r\n    let doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\r\n    if (doneRecipes) {\r\n      doneRecipes.push({\r\n        id: dishId,\r\n        type: 'comida',\r\n        area: dish.strArea,\r\n        category: dish.strCategory,\r\n        alcoholicOrNot: '',\r\n        name: dish.strMeal,\r\n        image: dish.strMealThumb,\r\n        tags: dish.strTags.split(','),\r\n      });\r\n    } else {\r\n      doneRecipes = [{\r\n        id: dishId,\r\n        type: 'comida',\r\n        area: dish.strArea,\r\n        category: dish.strCategory,\r\n        alcoholicOrNot: '',\r\n        name: dish.strMeal,\r\n        image: dish.strMealThumb,\r\n        tags: dish.strTags.split(','),\r\n      }];\r\n    }\r\n    localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\r\n    history.push('/receitas-feitas');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>In Progress</h2>\r\n      <div id=\"recipe-detail\">\r\n        {\r\n          dish && (\r\n            <div>\r\n              <img\r\n                data-testid=\"recipe-photo\"\r\n                src={ `${dish.strMealThumb}` }\r\n                alt=\"\"\r\n                width=\"400\"\r\n              />\r\n              <div id=\"shot-instruction\">\r\n                <h2 data-testid=\"recipe-title\" id=\"title\">{dish.strMeal}</h2>\r\n                <p data-testid=\"recipe-category\">{dish.strCategory}</p>\r\n                <p data-testid=\"instructions\">{dish.strInstructions}</p>\r\n              </div>\r\n              { getIngredient(dish).map((ingredient) => (\r\n                <div\r\n                  id\r\n                  key={ ingredient.index }\r\n                >\r\n                  <label\r\n                    data-testid={ `${ingredient.index - 1}-ingredient-step` }\r\n                    htmlFor={ ingredient.nome }\r\n                    className={\r\n                      ingredientsUsed.includes(ingredient.index) ? 'stepDone' : null\r\n                    }\r\n                  >\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={ ingredient.nome }\r\n                      checked={ ingredientsUsed.includes(ingredient.index) }\r\n                      onChange={ async ({ target }) => {\r\n                        const text = target.parentElement;\r\n                        text.classList.toggle('stepDone');\r\n                        if (target.checked) {\r\n                          setIngredientsUsed([...ingredientsUsed, ingredient.index]);\r\n                        } else {\r\n                          const index = ingredientsUsed.indexOf(ingredient.index);\r\n                          ingredientsUsed.splice(index, 1);\r\n                          setIngredientsUsed([...ingredientsUsed]);\r\n                        }\r\n                      } }\r\n                    />\r\n                    {`${ingredient.nome} - ${ingredient.quantidade}`}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n\r\n              <input\r\n                type=\"button\"\r\n                data-testid=\"share-btn\"\r\n                value=\"Compartilhar\"\r\n              />\r\n              <FavoriteButton recipe={ dish } type=\"comida\" id={ dishId } />\r\n              <input\r\n                type=\"button\"\r\n                data-testid=\"finish-recipe-btn\"\r\n                disabled={ (checks !== getIngredient(dish).length) }\r\n                onClick={ finishRecipe }\r\n                value=\"Finalizar-Receita\"\r\n              />\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}