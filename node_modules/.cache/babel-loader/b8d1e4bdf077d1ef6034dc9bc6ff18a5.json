{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/pages/BebidasEmProgresso.jsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport { getIngredient } from '../services/Functions';\nexport default function BebidasEmProgresso() {\n  const {\n    idDrinks,\n    setDrinkId,\n    setInProgress\n  } = useContext(RecipesAppContext);\n  const {\n    drinkId\n  } = useParams();\n  setDrinkId(drinkId);\n  const [drink] = idDrinks;\n  const history = useHistory();\n  const [checks, setCheck] = useState(0);\n  const [ingredientsUsed, setIngredientsUsed] = useState([]);\n  console.log(idDrinks);\n  console.log(drink);\n  useEffect(() => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgress && inProgress.cocktails[drinkId]) {\n      setInProgress(inProgress);\n      console.log('didMount', inProgress);\n      setIngredientsUsed(inProgress.cocktails[drinkId]);\n    }\n  }, [drinkId, setInProgress]);\n  useEffect(() => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (inProgress) {\n      inProgress.cocktails[drinkId] = ingredientsUsed;\n      console.log('ingredientsUsed', inProgress);\n      setInProgress(inProgress);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n    }\n  }, [ingredientsUsed, drinkId, setInProgress]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, drink && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: `${drink.strDrinkThumb}`,\n    alt: \"\",\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, drink.strDrink), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, drink.strAlcoholic), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, drink.strCategory, drink.strAlcoholic), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, drink.strInstructions), getIngredient(drink).map(ingredient => /*#__PURE__*/React.createElement(\"div\", {\n    key: ingredient.nome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    \"data-testid\": `${ingredient.index - 1}-ingredient-step`,\n    htmlFor: ingredient.nome,\n    className: ingredientsUsed.includes(ingredient.index) ? 'stepDone' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: ingredient.nome,\n    checked: ingredientsUsed.includes(ingredient.index),\n    onChange: async ({\n      target\n    }) => {\n      const text = target.parentElement;\n      text.classList.toggle('stepDone');\n\n      if (target.checked) {\n        setCheck(checks + 1);\n        setIngredientsUsed([...ingredientsUsed, ingredient.index]);\n      } else {\n        setCheck(checks - 1);\n        const index = ingredientsUsed.indexOf(ingredient.index);\n        ingredientsUsed.splice(index, 1);\n        setIngredientsUsed([...ingredientsUsed]);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }), `${ingredient.nome} - ${ingredient.quantidade}`))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    \"data-testid\": \"share-btn\",\n    value: \"Compartilhar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    \"data-testid\": \"favorite-btn\",\n    value: \"Favoritar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    value: \"Finalizar Receita\",\n    disabled: checks !== getIngredient(drink).length,\n    onClick: () => history.push('/receitas-feitas'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/pages/BebidasEmProgresso.jsx"],"names":["React","useContext","useEffect","useState","useParams","useHistory","RecipesAppContext","getIngredient","BebidasEmProgresso","idDrinks","setDrinkId","setInProgress","drinkId","drink","history","checks","setCheck","ingredientsUsed","setIngredientsUsed","console","log","inProgress","JSON","parse","localStorage","getItem","cocktails","setItem","stringify","strDrinkThumb","strDrink","strAlcoholic","strCategory","strInstructions","map","ingredient","nome","index","includes","target","text","parentElement","classList","toggle","checked","indexOf","splice","quantidade","length","push"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useHistory } from 'react-router-dom';\nimport RecipesAppContext from '../context/RecipesAppContext';\nimport { getIngredient } from '../services/Functions';\n\nexport default function BebidasEmProgresso() {\n  const { idDrinks, setDrinkId, setInProgress } = useContext(RecipesAppContext);\n  const { drinkId } = useParams();\n  setDrinkId(drinkId);\n  const [drink] = idDrinks;\n\n  const history = useHistory();\n  const [checks, setCheck] = useState(0);\n  const [ingredientsUsed, setIngredientsUsed] = useState([]);\n  console.log(idDrinks);\n  console.log(drink);\n\n  useEffect(() => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgress && inProgress.cocktails[drinkId]) {\n      setInProgress(inProgress);\n      console.log('didMount', inProgress);\n      setIngredientsUsed(inProgress.cocktails[drinkId]);\n    }\n  }, [drinkId, setInProgress]);\n\n  useEffect(() => {\n    const inProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (inProgress) {\n      inProgress.cocktails[drinkId] = ingredientsUsed;\n      console.log('ingredientsUsed', inProgress);\n      setInProgress(inProgress);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgress));\n    }\n  }, [ingredientsUsed, drinkId, setInProgress]);\n\n  return (\n    <div>\n      { drink\n        && (\n          <div>\n            <img\n              data-testid=\"recipe-photo\"\n              src={ `${drink.strDrinkThumb}` }\n              alt=\"\"\n              width=\"400\"\n            />\n            <p data-testid=\"recipe-title\">{drink.strDrink}</p>\n            <p>{drink.strAlcoholic}</p>\n            <p data-testid=\"recipe-category\">\n              {drink.strCategory}\n              {drink.strAlcoholic}\n            </p>\n            <p data-testid=\"instructions\">{drink.strInstructions}</p>\n            { getIngredient(drink).map((ingredient) => (\n              <div key={ ingredient.nome }>\n                <label\n                  data-testid={ `${ingredient.index - 1}-ingredient-step` }\n                  htmlFor={ ingredient.nome }\n                  className={\n                    ingredientsUsed.includes(ingredient.index) ? 'stepDone' : null\n                  }\n                >\n                  <input\n                    type=\"checkbox\"\n                    id={ ingredient.nome }\n                    checked={ ingredientsUsed.includes(ingredient.index) }\n                    onChange={ async ({ target }) => {\n                      const text = target.parentElement;\n                      text.classList.toggle('stepDone');\n                      if (target.checked) {\n                        setCheck(checks + 1);\n                        setIngredientsUsed([...ingredientsUsed, ingredient.index]);\n                      } else {\n                        setCheck(checks - 1);\n                        const index = ingredientsUsed.indexOf(ingredient.index);\n                        ingredientsUsed.splice(index, 1);\n                        setIngredientsUsed([...ingredientsUsed]);\n                      }\n                    } }\n                  />\n                  {`${ingredient.nome} - ${ingredient.quantidade}`}\n                </label>\n              </div>\n            ))}\n\n            <input\n              type=\"button\"\n              data-testid=\"share-btn\"\n              value=\"Compartilhar\"\n            />\n            <input\n              type=\"button\"\n              data-testid=\"favorite-btn\"\n              value=\"Favoritar\"\n            />\n            <input\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              value=\"Finalizar Receita\"\n              disabled={ (checks !== getIngredient(drink).length) }\n              onClick={ () => history.push('/receitas-feitas') }\n            />\n          </div>)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}