{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, { RequisitionFoodFirstName, RequisitionFoodName, getFoodByArea, RequisitionIdFood } from '../services/RequestDishes';\nimport RequisitionDrink, { getDrinksByIngredient, getDrinksById } from '../services/RequestDrinks';\n\nfunction RecipesAppProvider({\n  children\n}) {\n  const [dishesResquest, setDishesRequest] = useState({\n    type: '',\n    description: ''\n  });\n  const [drinksResquest, setDrinksRequest] = useState({\n    type: '',\n    description: ''\n  });\n  const [foodId, setFoodId] = useState();\n  const [drinkId, setDrinkId] = useState();\n  const [idDishes, setIdDishes] = useState([]);\n  const [idDrinks, setIdDrinks] = useState([]);\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const firstLetter = 'primeira-letra';\n  useEffect(() => {\n    if (dishesResquest.description === '') {\n      RequisitionFood('').then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'ingrediente') {\n      RequisitionFood(dishesResquest.description).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.description === 'area') {\n      getFoodByArea(dishesResquest.type).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'nome') {\n      RequisitionFoodName(dishesResquest.description).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === firstLetter && dishesResquest.description.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (dishesResquest.type === firstLetter && dishesResquest.description) {\n      RequisitionFoodFirstName(dishesResquest.description).then(response => setDishes(response));\n    }\n  }, [dishesResquest.type, dishesResquest.description]);\n  useEffect(() => {\n    const {\n      description,\n      type\n    } = drinksResquest;\n\n    if (description === '') {\n      RequisitionDrink(description, 's').then(response => setDrinks(response));\n    }\n\n    if (type === 'nome') {\n      RequisitionDrink(description, 's').then(response => setDrinks(response));\n    }\n\n    if (type === firstLetter) {\n      RequisitionDrink(description, 'f').then(response => setDrinks(response));\n    }\n\n    if (type === 'ingrediente') {\n      getDrinksByIngredient(description).then(response => setDrinks(response));\n    }\n  }, [drinksResquest]);\n  useEffect(() => {\n    RequisitionIdFood(foodId).then(response => setIdDishes(response));\n  }, [foodId]);\n  useEffect(() => {\n    getDrinksById(drinkId).then(response => setIdDrinks(response));\n  }, [drinkId]);\n  return /*#__PURE__*/React.createElement(RecipesAppContext.Provider, {\n    value: {\n      dishesResquest,\n      setDishesRequest,\n      drinksResquest,\n      setDrinksRequest,\n      dishes,\n      drinks,\n      setFoodId,\n      setDrinkId,\n      idDishes,\n      idDrinks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesAppProvider;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesAppContext","RequisitionFood","RequisitionFoodFirstName","RequisitionFoodName","getFoodByArea","RequisitionIdFood","RequisitionDrink","getDrinksByIngredient","getDrinksById","RecipesAppProvider","children","dishesResquest","setDishesRequest","type","description","drinksResquest","setDrinksRequest","foodId","setFoodId","drinkId","setDrinkId","idDishes","setIdDishes","idDrinks","setIdDrinks","dishes","setDishes","drinks","setDrinks","firstLetter","then","response","length","global","alert","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, {\n  RequisitionFoodFirstName,\n  RequisitionFoodName, getFoodByArea,\n  RequisitionIdFood,\n} from '../services/RequestDishes';\nimport RequisitionDrink,\n{ getDrinksByIngredient, getDrinksById } from '../services/RequestDrinks';\n\nfunction RecipesAppProvider({ children }) {\n  const [dishesResquest, setDishesRequest] = useState({ type: '', description: '' });\n  const [drinksResquest, setDrinksRequest] = useState({ type: '', description: '' });\n  const [foodId, setFoodId] = useState();\n  const [drinkId, setDrinkId] = useState();\n  const [idDishes, setIdDishes] = useState([]);\n  const [idDrinks, setIdDrinks] = useState([]);\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const firstLetter = 'primeira-letra';\n\n  useEffect(() => {\n    if (dishesResquest.description === '') {\n      RequisitionFood('').then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'ingrediente') {\n      RequisitionFood(dishesResquest.description).then((response) => setDishes(response));\n    }\n    if (dishesResquest.description === 'area') {\n      getFoodByArea(dishesResquest.type).then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'nome') {\n      RequisitionFoodName(dishesResquest.description)\n        .then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === firstLetter\n      && dishesResquest.description.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (dishesResquest.type === firstLetter && dishesResquest.description) {\n      RequisitionFoodFirstName(dishesResquest.description)\n        .then((response) => setDishes(response));\n    }\n  }, [dishesResquest.type, dishesResquest.description]);\n\n  useEffect(() => {\n    const { description, type } = drinksResquest;\n    if (description === '') {\n      RequisitionDrink(description, 's').then((response) => setDrinks(response));\n    }\n    if (type === 'nome') {\n      RequisitionDrink(description, 's').then((response) => setDrinks(response));\n    }\n    if (type === firstLetter) {\n      RequisitionDrink(description, 'f').then((response) => setDrinks(response));\n    }\n    if (type === 'ingrediente') {\n      getDrinksByIngredient(description).then((response) => setDrinks(response));\n    }\n  }, [drinksResquest]);\n\n  useEffect(() => {\n    RequisitionIdFood(foodId).then((response) => setIdDishes(response));\n  }, [foodId]);\n\n  useEffect(() => {\n    getDrinksById(drinkId).then((response) => setIdDrinks(response));\n  }, [drinkId]);\n\n  return (\n    <RecipesAppContext.Provider\n      value={ {\n        dishesResquest,\n        setDishesRequest,\n        drinksResquest,\n        setDrinksRequest,\n        dishes,\n        drinks,\n        setFoodId,\n        setDrinkId,\n        idDishes,\n        idDrinks } }\n    >\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesAppProvider;\n"]},"metadata":{},"sourceType":"module"}