{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, { RequisitionFoodFirstName, RequisitionFoodName } from '../services/Requisitions';\n\nfunction RecipesAppProvider({\n  children\n}) {\n  const [parameters, setParameters] = useState({\n    radio: '',\n    text: ''\n  });\n  const [dishes, setDishes] = useState([]);\n  useEffect(() => {\n    if (parameters.text === '') {\n      RequisitionFood('').then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'ingrediente') {\n      RequisitionFood(parameters.text).then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'nome') {\n      RequisitionFoodName(parameters.text).then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'primeira-letra' && parameters.text.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (parameters.radio === 'primeira-letra' && parameters.text) {\n      RequisitionFoodFirstName(parameters.text).then(response => setDishes(response));\n    }\n  }, [parameters.radio, parameters.text]);\n  return /*#__PURE__*/React.createElement(RecipesAppContext.Provider, {\n    value: {\n      parameters,\n      setParameters,\n      dishes\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesAppProvider;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesAppContext","RequisitionFood","RequisitionFoodFirstName","RequisitionFoodName","RecipesAppProvider","children","parameters","setParameters","radio","text","dishes","setDishes","then","response","length","global","alert","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,IACEC,wBADF,EAC4BC,mBAD5B,QACuD,0BADvD;;AAGA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAA5C;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,UAAU,CAACG,IAAX,KAAoB,EAAxB,EAA4B;AAC1BR,MAAAA,eAAe,CAAC,EAAD,CAAf,CAAoBW,IAApB,CAA0BC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAhD;AACD;;AACD,QAAIP,UAAU,CAACE,KAAX,KAAqB,aAAzB,EAAwC;AACtCP,MAAAA,eAAe,CAACK,UAAU,CAACG,IAAZ,CAAf,CAAiCG,IAAjC,CAAuCC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAA7D;AACD;;AACD,QAAIP,UAAU,CAACE,KAAX,KAAqB,MAAzB,EAAiC;AAC/BL,MAAAA,mBAAmB,CAACG,UAAU,CAACG,IAAZ,CAAnB,CAAqCG,IAArC,CAA2CC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAjE;AACD;;AACD,QAAIP,UAAU,CAACE,KAAX,KAAqB,gBAArB,IAAyCF,UAAU,CAACG,IAAX,CAAgBK,MAAhB,GAAyB,CAAtE,EAAyE;AACvEC,MAAAA,MAAM,CAACC,KAAP,CAAa,+CAAb;AACD,KAFD,MAEO,IAAIV,UAAU,CAACE,KAAX,KAAqB,gBAArB,IAAyCF,UAAU,CAACG,IAAxD,EAA+D;AACpEP,MAAAA,wBAAwB,CAACI,UAAU,CAACG,IAAZ,CAAxB,CAA0CG,IAA1C,CAAgDC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAtE;AACD;AACF,GAfQ,EAeN,CAACP,UAAU,CAACE,KAAZ,EAAmBF,UAAU,CAACG,IAA9B,CAfM,CAAT;AAiBA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAG;AAAEH,MAAAA,UAAF;AAAcC,MAAAA,aAAd;AAA6BG,MAAAA;AAA7B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,QADJ,CADF;AAKD;;AAEDD,kBAAkB,CAACa,SAAnB,GAA+B;AAC7BZ,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,IAAV,CAAeC;AADI,CAA/B;AAIA,eAAef,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, {\n  RequisitionFoodFirstName, RequisitionFoodName } from '../services/Requisitions';\n\nfunction RecipesAppProvider({ children }) {\n  const [parameters, setParameters] = useState({ radio: '', text: '' });\n  const [dishes, setDishes] = useState([]);\n\n  useEffect(() => {\n    if (parameters.text === '') {\n      RequisitionFood('').then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'ingrediente') {\n      RequisitionFood(parameters.text).then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'nome') {\n      RequisitionFoodName(parameters.text).then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'primeira-letra' && parameters.text.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (parameters.radio === 'primeira-letra' && parameters.text ) {\n      RequisitionFoodFirstName(parameters.text).then((response) => setDishes(response));\n    }\n  }, [parameters.radio, parameters.text]);\n\n  return (\n    <RecipesAppContext.Provider value={ { parameters, setParameters, dishes } }>\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesAppProvider;\n"]},"metadata":{},"sourceType":"module"}