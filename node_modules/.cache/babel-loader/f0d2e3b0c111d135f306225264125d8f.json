{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, { RequisitionFoodFirstName, RequisitionFoodName, getFoodByArea } from '../services/RequestDishes';\nimport RequisitionDrink from '../services/RequestDrinks';\n\nfunction RecipesAppProvider({\n  children\n}) {\n  const [dishesResquest, setDishesRequest] = useState({\n    type: '',\n    description: ''\n  });\n  const [drinksResquest, setDrinksRequest] = useState({\n    type: '',\n    description: ''\n  });\n  const [ingredientId, setIngredientId] = useState();\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    if (dishesResquest.description === '') {\n      RequisitionFood('').then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'ingrediente') {\n      RequisitionFood(dishesResquest.description).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.description === 'area') {\n      getFoodByArea(dishesResquest.type).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'nome') {\n      RequisitionFoodName(dishesResquest.description).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'primeira-letra' && dishesResquest.description.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (dishesResquest.type === 'primeira-letra' && dishesResquest.description) {\n      RequisitionFoodFirstName(dishesResquest.description).then(response => setDishes(response));\n    }\n  }, [dishesResquest.type, dishesResquest.description]);\n  useEffect(() => {\n    RequisitionIdFood(ingredientId).then(response => setIdDishes(response));\n  }, [ingredientId]);\n  useEffect(() => {\n    if (drinksResquest.description === '') {\n      RequisitionDrink('').then(response => setDrinks(response));\n    }\n  }, [drinksResquest.type, drinksResquest.description]);\n  return /*#__PURE__*/React.createElement(RecipesAppContext.Provider, {\n    value: {\n      dishesResquest,\n      setDishesRequest,\n      drinksResquest,\n      setDrinksRequest,\n      dishes,\n      drinks,\n      setIngredientId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesAppProvider;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesAppContext","RequisitionFood","RequisitionFoodFirstName","RequisitionFoodName","getFoodByArea","RequisitionDrink","RecipesAppProvider","children","dishesResquest","setDishesRequest","type","description","drinksResquest","setDrinksRequest","ingredientId","setIngredientId","dishes","setDishes","drinks","setDrinks","then","response","length","global","alert","RequisitionIdFood","setIdDishes","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, {\n  RequisitionFoodFirstName,\n  RequisitionFoodName, getFoodByArea,\n} from '../services/RequestDishes';\nimport RequisitionDrink from '../services/RequestDrinks';\n\nfunction RecipesAppProvider({ children }) {\n  const [dishesResquest, setDishesRequest] = useState({ type: '', description: '' });\n  const [drinksResquest, setDrinksRequest] = useState({ type: '', description: '' });\n  const [ingredientId, setIngredientId] = useState();\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    if (dishesResquest.description === '') {\n      RequisitionFood('').then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'ingrediente') {\n      RequisitionFood(dishesResquest.description).then((response) => setDishes(response));\n    }\n    if (dishesResquest.description === 'area') {\n      getFoodByArea(dishesResquest.type).then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'nome') {\n      RequisitionFoodName(dishesResquest.description)\n        .then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'primeira-letra'\n      && dishesResquest.description.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (dishesResquest.type === 'primeira-letra' && dishesResquest.description) {\n      RequisitionFoodFirstName(dishesResquest.description)\n        .then((response) => setDishes(response));\n    }\n  }, [dishesResquest.type, dishesResquest.description]);\n\n  useEffect(() => {\n    RequisitionIdFood(ingredientId).then((response) => setIdDishes(response));\n  }, [ingredientId]);\n\n  useEffect(() => {\n    if (drinksResquest.description === '') {\n      RequisitionDrink('').then((response) => setDrinks(response));\n    }\n  }, [drinksResquest.type, drinksResquest.description]);\n\n  return (\n    <RecipesAppContext.Provider\n      value={ {\n        dishesResquest,\n        setDishesRequest,\n        drinksResquest,\n        setDrinksRequest,\n        dishes,\n        drinks,\n        setIngredientId } }\n    >\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesAppProvider;\n"]},"metadata":{},"sourceType":"module"}