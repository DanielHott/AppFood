{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, { RequisitionFoodFirstName, RequisitionFoodName, getFoodByArea, RequisitionIdFood } from '../services/RequestDishes';\nimport RequisitionDrink, { getDrinksById } from '../services/RequestDrinks';\n\nfunction RecipesAppProvider({\n  children\n}) {\n  const [dishesResquest, setDishesRequest] = useState({\n    type: '',\n    description: ''\n  });\n  const [drinksResquest, setDrinksRequest] = useState({\n    type: '',\n    description: ''\n  });\n  const [foodId, setFoodId] = useState();\n  const [idDishes, setIdDishes] = useState([]);\n  const [idDrinks, setIdDrinks] = useState([]);\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    if (dishesResquest.description === '') {\n      RequisitionFood('').then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'ingrediente') {\n      RequisitionFood(dishesResquest.description).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.description === 'area') {\n      getFoodByArea(dishesResquest.type).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'nome') {\n      RequisitionFoodName(dishesResquest.description).then(response => setDishes(response));\n    }\n\n    if (dishesResquest.type === 'primeira-letra' && dishesResquest.description.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (dishesResquest.type === 'primeira-letra' && dishesResquest.description) {\n      RequisitionFoodFirstName(dishesResquest.description).then(response => setDishes(response));\n    }\n  }, [dishesResquest.type, dishesResquest.description]);\n  useEffect(() => {\n    RequisitionIdFood(foodId).then(response => setIdDishes(response));\n  }, [foodId]);\n  useEffect(() => {\n    getDrinksById(foodId).then(response => setIdDrinks(response));\n  }, [foodId]);\n  useEffect(() => {\n    if (drinksResquest.description === '') {\n      RequisitionDrink('').then(response => setDrinks(response));\n    }\n  }, [drinksResquest.type, drinksResquest.description]);\n  return /*#__PURE__*/React.createElement(RecipesAppContext.Provider, {\n    value: {\n      dishesResquest,\n      setDishesRequest,\n      drinksResquest,\n      setDrinksRequest,\n      dishes,\n      drinks,\n      setFoodId,\n      idDishes,\n      idDrinks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesAppProvider;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesAppContext","RequisitionFood","RequisitionFoodFirstName","RequisitionFoodName","getFoodByArea","RequisitionIdFood","RequisitionDrink","getDrinksById","RecipesAppProvider","children","dishesResquest","setDishesRequest","type","description","drinksResquest","setDrinksRequest","foodId","setFoodId","idDishes","setIdDishes","idDrinks","setIdDrinks","dishes","setDishes","drinks","setDrinks","then","response","length","global","alert","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, {\n  RequisitionFoodFirstName,\n  RequisitionFoodName, getFoodByArea,\n  RequisitionIdFood,\n} from '../services/RequestDishes';\nimport RequisitionDrink, {\n  getDrinksById,\n} from '../services/RequestDrinks';\n\nfunction RecipesAppProvider({ children }) {\n  const [dishesResquest, setDishesRequest] = useState({ type: '', description: '' });\n  const [drinksResquest, setDrinksRequest] = useState({ type: '', description: '' });\n  const [foodId, setFoodId] = useState();\n  const [idDishes, setIdDishes] = useState([]);\n  const [idDrinks, setIdDrinks] = useState([]);\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    if (dishesResquest.description === '') {\n      RequisitionFood('').then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'ingrediente') {\n      RequisitionFood(dishesResquest.description).then((response) => setDishes(response));\n    }\n    if (dishesResquest.description === 'area') {\n      getFoodByArea(dishesResquest.type).then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'nome') {\n      RequisitionFoodName(dishesResquest.description)\n        .then((response) => setDishes(response));\n    }\n    if (dishesResquest.type === 'primeira-letra'\n      && dishesResquest.description.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (dishesResquest.type === 'primeira-letra' && dishesResquest.description) {\n      RequisitionFoodFirstName(dishesResquest.description)\n        .then((response) => setDishes(response));\n    }\n  }, [dishesResquest.type, dishesResquest.description]);\n\n  useEffect(() => {\n    RequisitionIdFood(foodId).then((response) => setIdDishes(response));\n  }, [foodId]);\n\n  useEffect(() => {\n    getDrinksById(foodId).then((response) => setIdDrinks(response));\n  }, [foodId]);\n\n  useEffect(() => {\n    if (drinksResquest.description === '') {\n      RequisitionDrink('').then((response) => setDrinks(response));\n    }\n  }, [drinksResquest.type, drinksResquest.description]);\n\n  return (\n    <RecipesAppContext.Provider\n      value={ {\n        dishesResquest,\n        setDishesRequest,\n        drinksResquest,\n        setDrinksRequest,\n        dishes,\n        drinks,\n        setFoodId,\n        idDishes,\n        idDrinks } }\n    >\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesAppProvider;\n"]},"metadata":{},"sourceType":"module"}