{"ast":null,"code":"var _jsxFileName = \"/home/dh/Repositorio/AppFood/src/components/FavoriteButton.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport { saveInFavorites } from '../services/Functions';\nexport default function FavoriteButton({\n  recipe,\n  id,\n  type\n}) {\n  const [isFavorite, setIsFavorite] = useState();\n  useEffect(() => {\n    const currentFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (currentFavorites) {\n      const isAlreadyFavorited = currentFavorites.find(recipee => recipee.id === id);\n      if (isAlreadyFavorited) setIsFavorite(true);\n    } else setIsFavorite(false);\n  }, [id]);\n  useEffect(() => {\n    const currentFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (isFavorite) {\n      if (currentFavorites) {\n        currentFavorites.push(saveInFavorites(recipe, type));\n        localStorage.setItem('favoriteRecipes', JSON.stringify(currentFavorites));\n      } else {\n        const newFavorite = [saveInFavorites(recipe, type)];\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n      }\n    } else if (currentFavorites) {\n      const newFavorites = currentFavorites.filter(recipee => recipee.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    }\n  }, [id, isFavorite, recipe, type]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setIsFavorite(!isFavorite),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, isFavorite ? /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: blackHeartIcon,\n    alt: \"favorited\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: whiteHeartIcon,\n    alt: \"favorite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }));\n}\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.any).isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/dh/Repositorio/AppFood/src/components/FavoriteButton.jsx"],"names":["React","useEffect","useState","PropTypes","saveInFavorites","FavoriteButton","recipe","id","type","isFavorite","setIsFavorite","currentFavorites","JSON","parse","localStorage","getItem","isAlreadyFavorited","find","recipee","push","setItem","stringify","newFavorite","newFavorites","filter","blackHeartIcon","whiteHeartIcon","propTypes","objectOf","any","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,EAAV;AAAcC,EAAAA;AAAd,CAAxB,EAA8C;AAC3D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAzB;;AACA,QAAIJ,gBAAJ,EAAsB;AACpB,YAAMK,kBAAkB,GAAGL,gBAAgB,CAACM,IAAjB,CAAuBC,OAAD,IAAaA,OAAO,CAACX,EAAR,KAAeA,EAAlD,CAA3B;AACA,UAAIS,kBAAJ,EAAwBN,aAAa,CAAC,IAAD,CAAb;AACzB,KAHD,MAGOA,aAAa,CAAC,KAAD,CAAb;AACR,GANQ,EAMN,CAACH,EAAD,CANM,CAAT;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAzB;;AACA,QAAIN,UAAJ,EAAgB;AACd,UAAIE,gBAAJ,EAAsB;AACpBA,QAAAA,gBAAgB,CAACQ,IAAjB,CAAsBf,eAAe,CAACE,MAAD,EAASE,IAAT,CAArC;AACAM,QAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCR,IAAI,CAACS,SAAL,CAAeV,gBAAf,CAAxC;AACD,OAHD,MAGO;AACL,cAAMW,WAAW,GAAG,CAAClB,eAAe,CAACE,MAAD,EAASE,IAAT,CAAhB,CAApB;AACAM,QAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCR,IAAI,CAACS,SAAL,CAAeC,WAAf,CAAxC;AACD;AACF,KARD,MAQO,IAAIX,gBAAJ,EAAsB;AAC3B,YAAMY,YAAY,GAAGZ,gBAAgB,CAACa,MAAjB,CAAyBN,OAAD,IAAaA,OAAO,CAACX,EAAR,KAAeA,EAApD,CAArB;AACAO,MAAAA,YAAY,CAACM,OAAb,CAAqB,iBAArB,EAAwCR,IAAI,CAACS,SAAL,CAAeE,YAAf,CAAxC;AACD;AACF,GAdQ,EAcN,CAAChB,EAAD,EAAKE,UAAL,EAAiBH,MAAjB,EAAyBE,IAAzB,CAdM,CAAT;AAgBA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAG,MAAME,aAAa,CAAC,CAACD,UAAF,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIA,UAAU,gBACL;AAAK,mBAAY,cAAjB;AAAgC,IAAA,GAAG,EAAGgB,cAAtC;AAAuD,IAAA,GAAG,EAAC,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAEL;AAAK,mBAAY,cAAjB;AAAgC,IAAA,GAAG,EAAGC,cAAtC;AAAuD,IAAA,GAAG,EAAC,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPT,CADF;AAYD;AAEDrB,cAAc,CAACsB,SAAf,GAA2B;AACzBrB,EAAAA,MAAM,EAAEH,SAAS,CAACyB,QAAV,CAAmBzB,SAAS,CAAC0B,GAA7B,EAAkCC,UADjB;AAEzBvB,EAAAA,EAAE,EAAEJ,SAAS,CAAC4B,MAAV,CAAiBD,UAFI;AAGzBtB,EAAAA,IAAI,EAAEL,SAAS,CAAC4B,MAAV,CAAiBD;AAHE,CAA3B","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport { saveInFavorites } from '../services/Functions';\n\nexport default function FavoriteButton({ recipe, id, type }) {\n  const [isFavorite, setIsFavorite] = useState();\n\n  useEffect(() => {\n    const currentFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (currentFavorites) {\n      const isAlreadyFavorited = currentFavorites.find((recipee) => recipee.id === id);\n      if (isAlreadyFavorited) setIsFavorite(true);\n    } else setIsFavorite(false);\n  }, [id]);\n\n  useEffect(() => {\n    const currentFavorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (isFavorite) {\n      if (currentFavorites) {\n        currentFavorites.push(saveInFavorites(recipe, type));\n        localStorage.setItem('favoriteRecipes', JSON.stringify(currentFavorites));\n      } else {\n        const newFavorite = [saveInFavorites(recipe, type)];\n        localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorite));\n      }\n    } else if (currentFavorites) {\n      const newFavorites = currentFavorites.filter((recipee) => recipee.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(newFavorites));\n    }\n  }, [id, isFavorite, recipe, type]);\n\n  return (\n    <button\n      type=\"button\"\n      onClick={ () => setIsFavorite(!isFavorite) }\n    >\n      {\n        isFavorite\n          ? (<img data-testid=\"favorite-btn\" src={ blackHeartIcon } alt=\"favorited\" />)\n          : (<img data-testid=\"favorite-btn\" src={ whiteHeartIcon } alt=\"favorite\" />)\n      }\n    </button>\n  );\n}\n\nFavoriteButton.propTypes = {\n  recipe: PropTypes.objectOf(PropTypes.any).isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}