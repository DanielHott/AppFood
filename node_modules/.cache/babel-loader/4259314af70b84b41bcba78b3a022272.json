{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/components/Categories.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Categories({\n  getCategories,\n  getByCategorie,\n  setElements,\n  setRequest,\n  keyRequest\n}) {\n  const [categories, setCategories] = useState([]);\n  const [verify, setVerify] = useState('');\n  useEffect(() => {\n    const MAX_LENGTH_ARRAY = 5;\n    getCategories('c', MAX_LENGTH_ARRAY).then(data => setCategories(data));\n  }, [getCategories]);\n\n  async function setHooks(category) {\n    if (category === verify || category === 'All') {\n      setRequest(keyRequest);\n      setVerify('');\n    } else {\n      getByCategorie(category, 'c').then(data => setElements(data));\n      setVerify(category);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, [{\n    strCategory: 'All'\n  }, ...categories].map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    key: strCategory,\n    type: \"button\",\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: () => setHooks(strCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, strCategory)));\n}\n\nCategories.propTypes = {\n  getCategories: PropTypes.func.isRequired,\n  getByCategorie: PropTypes.func.isRequired,\n  setElements: PropTypes.func.isRequired,\n  setRequest: PropTypes.func.isRequired,\n  keyRequest: PropTypes.objectOf(PropTypes.string).isRequired\n};\nexport default Categories;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/components/Categories.jsx"],"names":["React","useEffect","useState","PropTypes","Categories","getCategories","getByCategorie","setElements","setRequest","keyRequest","categories","setCategories","verify","setVerify","MAX_LENGTH_ARRAY","then","data","setHooks","category","strCategory","map","propTypes","func","isRequired","objectOf","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,UAAT,CACE;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,cAAjB;AAAiCC,EAAAA,WAAjC;AAA8CC,EAAAA,UAA9C;AAA0DC,EAAAA;AAA1D,CADF,EAEE;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,gBAAgB,GAAG,CAAzB;AACAT,IAAAA,aAAa,CAAC,GAAD,EAAMS,gBAAN,CAAb,CAAqCC,IAArC,CAA2CC,IAAD,IAAUL,aAAa,CAACK,IAAD,CAAjE;AACD,GAHQ,EAGN,CAACX,aAAD,CAHM,CAAT;;AAKA,iBAAeY,QAAf,CAAwBC,QAAxB,EAAkC;AAChC,QAAIA,QAAQ,KAAKN,MAAb,IAAuBM,QAAQ,KAAK,KAAxC,EAA+C;AAC7CV,MAAAA,UAAU,CAACC,UAAD,CAAV;AACAI,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD,KAHD,MAGO;AACLP,MAAAA,cAAc,CAACY,QAAD,EAAW,GAAX,CAAd,CAA8BH,IAA9B,CAAoCC,IAAD,IAAUT,WAAW,CAACS,IAAD,CAAxD;AACAH,MAAAA,SAAS,CAACK,QAAD,CAAT;AACD;AACF;;AACD,sBACE,0CAEI,CAAC;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAD,EAAyB,GAAGT,UAA5B,EAAwCU,GAAxC,CAA4C,CAAC;AAAED,IAAAA;AAAF,GAAD,kBAC1C;AACE,IAAA,GAAG,EAAGA,WADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,mBAAe,GAAEA,WAAY,kBAH/B;AAIE,IAAA,OAAO,EAAG,MAAMF,QAAQ,CAACE,WAAD,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGA,WANH,CADF,CAFJ,CADF;AAeD;;AAEDf,UAAU,CAACiB,SAAX,GAAuB;AACrBhB,EAAAA,aAAa,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADT;AAErBjB,EAAAA,cAAc,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UAFV;AAGrBhB,EAAAA,WAAW,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UAHP;AAIrBf,EAAAA,UAAU,EAAEL,SAAS,CAACmB,IAAV,CAAeC,UAJN;AAKrBd,EAAAA,UAAU,EAAEN,SAAS,CAACqB,QAAV,CAAmBrB,SAAS,CAACsB,MAA7B,EAAqCF;AAL5B,CAAvB;AAQA,eAAenB,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Categories(\n  { getCategories, getByCategorie, setElements, setRequest, keyRequest },\n) {\n  const [categories, setCategories] = useState([]);\n  const [verify, setVerify] = useState('');\n\n  useEffect(() => {\n    const MAX_LENGTH_ARRAY = 5;\n    getCategories('c', MAX_LENGTH_ARRAY).then((data) => setCategories(data));\n  }, [getCategories]);\n\n  async function setHooks(category) {\n    if (category === verify || category === 'All') {\n      setRequest(keyRequest);\n      setVerify('');\n    } else {\n      getByCategorie(category, 'c').then((data) => setElements(data));\n      setVerify(category);\n    }\n  }\n  return (\n    <>\n      {\n        [{ strCategory: 'All' }, ...categories].map(({ strCategory }) => (\n          <button\n            key={ strCategory }\n            type=\"button\"\n            data-testid={ `${strCategory}-category-filter` }\n            onClick={ () => setHooks(strCategory) }\n          >\n            {strCategory}\n          </button>))\n      }\n    </>\n  );\n}\n\nCategories.propTypes = {\n  getCategories: PropTypes.func.isRequired,\n  getByCategorie: PropTypes.func.isRequired,\n  setElements: PropTypes.func.isRequired,\n  setRequest: PropTypes.func.isRequired,\n  keyRequest: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}