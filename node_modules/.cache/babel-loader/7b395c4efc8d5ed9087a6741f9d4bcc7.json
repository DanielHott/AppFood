{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, { RequisitionFoodFirstName, RequisitionFoodName, RequisitionIdFood } from '../services/Requisitions';\nimport getId from '../services/Functions';\n\nfunction RecipesAppProvider({\n  children\n}) {\n  const [parameters, setParameters] = useState({\n    radio: '',\n    text: ''\n  });\n  const [idDishes, setIdDishes] = useState([]);\n  const [ingredientId, setIngredientId] = useState();\n  const [dishes, setDishes] = useState([]);\n  useEffect(() => {\n    if (parameters.text === '') {\n      RequisitionFood('').then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'ingrediente') {\n      RequisitionFood(parameters.text).then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'nome') {\n      RequisitionFoodName(parameters.text).then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'primeira-letra' && parameters.text.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (parameters.radio === 'primeira-letra' && parameters.text !== '') {\n      RequisitionFoodFirstName(parameters.text).then(response => setDishes(response));\n    }\n  }, [parameters.radio, parameters.text]);\n  useEffect(() => {\n    RequisitionIdFood(ingredientId).then(response => setIdDishes(response));\n  }, [ingredientId]);\n  return /*#__PURE__*/React.createElement(RecipesAppContext.Provider, {\n    value: {\n      parameters,\n      setParameters,\n      dishes,\n      idDishes,\n      setIngredientId,\n      getId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesAppProvider;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesAppContext","RequisitionFood","RequisitionFoodFirstName","RequisitionFoodName","RequisitionIdFood","getId","RecipesAppProvider","children","parameters","setParameters","radio","text","idDishes","setIdDishes","ingredientId","setIngredientId","dishes","setDishes","then","response","length","global","alert","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,IACEC,wBADF,EAEEC,mBAFF,EAGEC,iBAHF,QAG2B,0BAH3B;AAIA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;AAAEa,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAA5C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,EAAhD;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,UAAU,CAACG,IAAX,KAAoB,EAAxB,EAA4B;AAC1BV,MAAAA,eAAe,CAAC,EAAD,CAAf,CAAoBiB,IAApB,CAA0BC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAhD;AACD;;AACD,QAAIX,UAAU,CAACE,KAAX,KAAqB,aAAzB,EAAwC;AACtCT,MAAAA,eAAe,CAACO,UAAU,CAACG,IAAZ,CAAf,CAAiCO,IAAjC,CAAuCC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAA7D;AACD;;AACD,QAAIX,UAAU,CAACE,KAAX,KAAqB,MAAzB,EAAiC;AAC/BP,MAAAA,mBAAmB,CAACK,UAAU,CAACG,IAAZ,CAAnB,CAAqCO,IAArC,CAA2CC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAjE;AACD;;AACD,QAAIX,UAAU,CAACE,KAAX,KAAqB,gBAArB,IAAyCF,UAAU,CAACG,IAAX,CAAgBS,MAAhB,GAAyB,CAAtE,EAAyE;AACvEC,MAAAA,MAAM,CAACC,KAAP,CAAa,+CAAb;AACD,KAFD,MAEO,IAAId,UAAU,CAACE,KAAX,KAAqB,gBAArB,IAAyCF,UAAU,CAACG,IAAX,KAAoB,EAAjE,EAAqE;AAC1ET,MAAAA,wBAAwB,CAACM,UAAU,CAACG,IAAZ,CAAxB,CAA0CO,IAA1C,CAAgDC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAtE;AACD;AACF,GAfQ,EAeN,CAACX,UAAU,CAACE,KAAZ,EAAmBF,UAAU,CAACG,IAA9B,CAfM,CAAT;AAiBAb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,iBAAiB,CAACU,YAAD,CAAjB,CAAgCI,IAAhC,CAAsCC,QAAD,IAAcN,WAAW,CAACM,QAAD,CAA9D;AACD,GAFQ,EAEN,CAACL,YAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAG;AAAEN,MAAAA,UAAF;AAAcC,MAAAA,aAAd;AAA6BO,MAAAA,MAA7B;AAAqCJ,MAAAA,QAArC;AAA+CG,MAAAA,eAA/C;AAAgEV,MAAAA;AAAhE,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIE,QAHJ,CADF;AAOD;;AAEDD,kBAAkB,CAACiB,SAAnB,GAA+B;AAC7BhB,EAAAA,QAAQ,EAAER,SAAS,CAACyB,IAAV,CAAeC;AADI,CAA/B;AAIA,eAAenB,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, {\n  RequisitionFoodFirstName,\n  RequisitionFoodName,\n  RequisitionIdFood } from '../services/Requisitions';\nimport getId from '../services/Functions';\n\nfunction RecipesAppProvider({ children }) {\n  const [parameters, setParameters] = useState({ radio: '', text: '' });\n  const [idDishes, setIdDishes] = useState([]);\n  const [ingredientId, setIngredientId] = useState();\n  const [dishes, setDishes] = useState([]);\n\n  useEffect(() => {\n    if (parameters.text === '') {\n      RequisitionFood('').then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'ingrediente') {\n      RequisitionFood(parameters.text).then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'nome') {\n      RequisitionFoodName(parameters.text).then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'primeira-letra' && parameters.text.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (parameters.radio === 'primeira-letra' && parameters.text !== '') {\n      RequisitionFoodFirstName(parameters.text).then((response) => setDishes(response));\n    }\n  }, [parameters.radio, parameters.text]);\n\n  useEffect(() => {\n    RequisitionIdFood(ingredientId).then((response) => setIdDishes(response));\n  }, [ingredientId]);\n\n  return (\n    <RecipesAppContext.Provider\n      value={ { parameters, setParameters, dishes, idDishes, setIngredientId, getId } }\n    >\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesAppProvider;\n"]},"metadata":{},"sourceType":"module"}