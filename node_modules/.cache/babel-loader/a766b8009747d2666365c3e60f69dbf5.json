{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/components/Login.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nexport default function Login({\n  history\n}) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  useEffect(() => {\n    const MIN_PASS_LENGTH = 6;\n    const checkEmail = /\\b[\\w.-]+@[\\w.-]+\\.\\w{2,4}\\b/gi.test(email);\n    const checkPassword = password.length > MIN_PASS_LENGTH;\n\n    if (checkEmail && checkPassword) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [email, password]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({\n      email\n    }));\n    history.push('/comidas');\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"email-input\",\n    onChange: e => setEmail(e.target.value),\n    id: \"email-input\",\n    placeholder: \"Email\",\n    type: \"email\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    \"data-testid\": \"password-input\",\n    onChange: e => setPassword(e.target.value),\n    id: \"password-input\",\n    placeholder: \"Senha\",\n    type: \"password\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"login-submit-btn\",\n    disabled: isDisabled,\n    onClick: handleSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Entrar\"));\n}\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/components/Login.jsx"],"names":["React","useState","useEffect","PropTypes","Login","history","email","setEmail","password","setPassword","isDisabled","setIsDisabled","MIN_PASS_LENGTH","checkEmail","test","checkPassword","length","handleSubmit","event","preventDefault","localStorage","setItem","JSON","stringify","push","e","target","value","propTypes","shape","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AACzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,eAAe,GAAG,CAAxB;AACA,UAAMC,UAAU,GAAG,iCAAiCC,IAAjC,CAAsCR,KAAtC,CAAnB;AACA,UAAMS,aAAa,GAAGP,QAAQ,CAACQ,MAAT,GAAkBJ,eAAxC;;AACA,QAAIC,UAAU,IAAIE,aAAlB,EAAiC;AAC/BJ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GATQ,EASN,CAACL,KAAD,EAAQE,QAAR,CATM,CAAT;;AAWA,WAASS,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,CAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuC,CAAvC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe;AAAEjB,MAAAA;AAAF,KAAf,CAA7B;AACAD,IAAAA,OAAO,CAACmB,IAAR,CAAa,UAAb;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,aADd;AAEE,IAAA,QAAQ,EAAIC,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAGrB,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,gBADd;AAEE,IAAA,QAAQ,EAAImB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF/B;AAGE,IAAA,EAAE,EAAC,gBAHL;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,KAAK,EAAGnB,QANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,eAqBE;AACE,mBAAY,kBADd;AAEE,IAAA,QAAQ,EAAGE,UAFb;AAGE,IAAA,OAAO,EAAGO,YAHZ;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,CADF;AAgCD;AAEDb,KAAK,CAACwB,SAAN,GAAkB;AAChBvB,EAAAA,OAAO,EAAEF,SAAS,CAAC0B,KAAV,CAAgB;AACvBL,IAAAA,IAAI,EAAErB,SAAS,CAAC2B;AADO,GAAhB,EAENC;AAHa,CAAlB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Login({ history }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  useEffect(() => {\n    const MIN_PASS_LENGTH = 6;\n    const checkEmail = /\\b[\\w.-]+@[\\w.-]+\\.\\w{2,4}\\b/gi.test(email);\n    const checkPassword = password.length > MIN_PASS_LENGTH;\n    if (checkEmail && checkPassword) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [email, password]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    localStorage.setItem('user', JSON.stringify({ email }));\n    history.push('/comidas');\n  }\n\n  return (\n    <form>\n      <label htmlFor=\"email-input\">\n        <input\n          data-testid=\"email-input\"\n          onChange={ (e) => setEmail(e.target.value) }\n          id=\"email-input\"\n          placeholder=\"Email\"\n          type=\"email\"\n          value={ email }\n        />\n      </label>\n      <label htmlFor=\"password-input\">\n        <input\n          data-testid=\"password-input\"\n          onChange={ (e) => setPassword(e.target.value) }\n          id=\"password-input\"\n          placeholder=\"Senha\"\n          type=\"password\"\n          value={ password }\n        />\n      </label>\n      <button\n        data-testid=\"login-submit-btn\"\n        disabled={ isDisabled }\n        onClick={ handleSubmit }\n        type=\"submit\"\n      >\n        Entrar\n      </button>\n    </form>\n  );\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}