{"ast":null,"code":"var _jsxFileName = \"/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, { RequisitionFoodFirstName, RequisitionFoodName, RequisitionIdFood, RequisitionDrink, getFoodByArea, getDrinksIngredients } from '../services/Requisitions';\nimport getId from '../services/Functions';\n\nfunction RecipesAppProvider({\n  children\n}) {\n  const [parameters, setParameters] = useState({\n    radio: '',\n    text: ''\n  });\n  const [idDishes, setIdDishes] = useState([]);\n  const [ingredientId, setIngredientId] = useState();\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    if (parameters.text === '') {\n      RequisitionFood('').then(response => setDishes(response));\n      RequisitionDrink('').then(response => setDrinks(response));\n    }\n\n    if (parameters.radio === 'ingrediente') {\n      RequisitionFood(parameters.text).then(response => setDishes(response));\n      RequisitionDrink(parameters.text).then(response => setDrinks(response));\n    }\n\n    if (parameters.text === 'area') {\n      getFoodByArea(parameters.radio).then(response => setDishes(response));\n    }\n\n    if (parameters.radio === 'nome') {\n      RequisitionFoodName(parameters.text).then(response => setDishes(response));\n      RequisitionDrink(parameters.text).then(response => setDrinks(response));\n    }\n\n    if (parameters.radio === 'primeira-letra' && parameters.text.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (parameters.radio === 'primeira-letra' && parameters.text !== '') {\n      RequisitionFoodFirstName(parameters.text).then(response => setDishes(response));\n    }\n  }, [parameters.radio, parameters.text]);\n  useEffect(() => {\n    RequisitionIdFood(ingredientId).then(response => setIdDishes(response));\n  }, [ingredientId]);\n  return /*#__PURE__*/React.createElement(RecipesAppContext.Provider, {\n    value: {\n      parameters,\n      setParameters,\n      dishes,\n      idDishes,\n      setIngredientId,\n      getId,\n      drinks\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesAppProvider;","map":{"version":3,"sources":["/home/dh/projetos/sd-015-b-project-recipes-app/src/context/RecipesAppProvider.js"],"names":["React","useState","useEffect","PropTypes","RecipesAppContext","RequisitionFood","RequisitionFoodFirstName","RequisitionFoodName","RequisitionIdFood","RequisitionDrink","getFoodByArea","getDrinksIngredients","getId","RecipesAppProvider","children","parameters","setParameters","radio","text","idDishes","setIdDishes","ingredientId","setIngredientId","dishes","setDishes","drinks","setDrinks","then","response","length","global","alert","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,eAAP,IACEC,wBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,aALF,EAMEC,oBANF,QAM8B,0BAN9B;AAOA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC;AAAEgB,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAA5C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,EAAhD;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,UAAU,CAACG,IAAX,KAAoB,EAAxB,EAA4B;AAC1Bb,MAAAA,eAAe,CAAC,EAAD,CAAf,CAAoBsB,IAApB,CAA0BC,QAAD,IAAcJ,SAAS,CAACI,QAAD,CAAhD;AACAnB,MAAAA,gBAAgB,CAAC,EAAD,CAAhB,CAAqBkB,IAArB,CAA2BC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAAjD;AACD;;AACD,QAAIb,UAAU,CAACE,KAAX,KAAqB,aAAzB,EAAwC;AACtCZ,MAAAA,eAAe,CAACU,UAAU,CAACG,IAAZ,CAAf,CAAiCS,IAAjC,CAAuCC,QAAD,IAAcJ,SAAS,CAACI,QAAD,CAA7D;AACAnB,MAAAA,gBAAgB,CAACM,UAAU,CAACG,IAAZ,CAAhB,CAAkCS,IAAlC,CAAwCC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAA9D;AACD;;AACD,QAAIb,UAAU,CAACG,IAAX,KAAoB,MAAxB,EAAgC;AAC9BR,MAAAA,aAAa,CAACK,UAAU,CAACE,KAAZ,CAAb,CAAgCU,IAAhC,CAAsCC,QAAD,IAAcJ,SAAS,CAACI,QAAD,CAA5D;AACD;;AACD,QAAIb,UAAU,CAACE,KAAX,KAAqB,MAAzB,EAAiC;AAC/BV,MAAAA,mBAAmB,CAACQ,UAAU,CAACG,IAAZ,CAAnB,CAAqCS,IAArC,CAA2CC,QAAD,IAAcJ,SAAS,CAACI,QAAD,CAAjE;AACAnB,MAAAA,gBAAgB,CAACM,UAAU,CAACG,IAAZ,CAAhB,CAAkCS,IAAlC,CAAwCC,QAAD,IAAcF,SAAS,CAACE,QAAD,CAA9D;AACD;;AACD,QAAIb,UAAU,CAACE,KAAX,KAAqB,gBAArB,IAAyCF,UAAU,CAACG,IAAX,CAAgBW,MAAhB,GAAyB,CAAtE,EAAyE;AACvEC,MAAAA,MAAM,CAACC,KAAP,CAAa,+CAAb;AACD,KAFD,MAEO,IAAIhB,UAAU,CAACE,KAAX,KAAqB,gBAArB,IAAyCF,UAAU,CAACG,IAAX,KAAoB,EAAjE,EAAqE;AAC1EZ,MAAAA,wBAAwB,CAACS,UAAU,CAACG,IAAZ,CAAxB,CAA0CS,IAA1C,CAAgDC,QAAD,IAAcJ,SAAS,CAACI,QAAD,CAAtE;AACD;AACF,GArBQ,EAqBN,CAACb,UAAU,CAACE,KAAZ,EAAmBF,UAAU,CAACG,IAA9B,CArBM,CAAT;AAuBAhB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,iBAAiB,CAACa,YAAD,CAAjB,CAAgCM,IAAhC,CAAsCC,QAAD,IAAcR,WAAW,CAACQ,QAAD,CAA9D;AACD,GAFQ,EAEN,CAACP,YAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAG;AACNN,MAAAA,UADM;AACMC,MAAAA,aADN;AACqBO,MAAAA,MADrB;AAC6BJ,MAAAA,QAD7B;AACuCG,MAAAA,eADvC;AACwDV,MAAAA,KADxD;AAC+Da,MAAAA;AAD/D,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIIX,QAJJ,CADF;AAQD;;AAEDD,kBAAkB,CAACmB,SAAnB,GAA+B;AAC7BlB,EAAAA,QAAQ,EAAEX,SAAS,CAAC8B,IAAV,CAAeC;AADI,CAA/B;AAIA,eAAerB,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesAppContext from './RecipesAppContext';\nimport RequisitionFood, {\n  RequisitionFoodFirstName,\n  RequisitionFoodName,\n  RequisitionIdFood,\n  RequisitionDrink,\n  getFoodByArea,\n  getDrinksIngredients } from '../services/Requisitions';\nimport getId from '../services/Functions';\n\nfunction RecipesAppProvider({ children }) {\n  const [parameters, setParameters] = useState({ radio: '', text: '' });\n  const [idDishes, setIdDishes] = useState([]);\n  const [ingredientId, setIngredientId] = useState();\n  const [dishes, setDishes] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    if (parameters.text === '') {\n      RequisitionFood('').then((response) => setDishes(response));\n      RequisitionDrink('').then((response) => setDrinks(response));\n    }\n    if (parameters.radio === 'ingrediente') {\n      RequisitionFood(parameters.text).then((response) => setDishes(response));\n      RequisitionDrink(parameters.text).then((response) => setDrinks(response));\n    }\n    if (parameters.text === 'area') {\n      getFoodByArea(parameters.radio).then((response) => setDishes(response));\n    }\n    if (parameters.radio === 'nome') {\n      RequisitionFoodName(parameters.text).then((response) => setDishes(response));\n      RequisitionDrink(parameters.text).then((response) => setDrinks(response));\n    }\n    if (parameters.radio === 'primeira-letra' && parameters.text.length > 1) {\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\n    } else if (parameters.radio === 'primeira-letra' && parameters.text !== '') {\n      RequisitionFoodFirstName(parameters.text).then((response) => setDishes(response));\n    }\n  }, [parameters.radio, parameters.text]);\n\n  useEffect(() => {\n    RequisitionIdFood(ingredientId).then((response) => setIdDishes(response));\n  }, [ingredientId]);\n\n  return (\n    <RecipesAppContext.Provider\n      value={ {\n        parameters, setParameters, dishes, idDishes, setIngredientId, getId, drinks } }\n    >\n      { children }\n    </RecipesAppContext.Provider>\n  );\n}\n\nRecipesAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default RecipesAppProvider;\n"]},"metadata":{},"sourceType":"module"}